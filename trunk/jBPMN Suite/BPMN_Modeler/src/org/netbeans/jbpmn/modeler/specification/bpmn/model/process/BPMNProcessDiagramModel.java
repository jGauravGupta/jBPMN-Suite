/** Copyright [2014] Gaurav Gupta
   *
   *Licensed under the Apache License, Version 2.0 (the "License");
   *you may not use this file except in compliance with the License.
   *You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   *Unless required by applicable law or agreed to in writing, software
   *distributed under the License is distributed on an "AS IS" BASIS,
   *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   *See the License for the specific language governing permissions and
   *limitations under the License.
   */
package org.netbeans.jbpmn.modeler.specification.bpmn.model.process;

import org.netbeans.jbpmn.modeler.specification.bpmn.model.BPMNDiagramModel;
import org.netbeans.jbpmn.spec.BPMNDiagram;
import org.netbeans.jbpmn.spec.BPMNPlane;
import org.netbeans.jbpmn.spec.TDefinitions;
import org.netbeans.jbpmn.spec.TProcess;
import org.netbeans.modeler.config.element.ElementConfigFactory;
import org.netbeans.modeler.core.NBModelerUtil;
import org.netbeans.modeler.core.ModelerFile;


public class BPMNProcessDiagramModel extends BPMNDiagramModel {
   
    
    
    @Override
    public void init(ModelerFile modelerFile) {
        ElementConfigFactory elementConfigFactory = modelerFile.getVendorSpecification().getElementConfigFactory();
        TDefinitions definition = new TDefinitions();
        TProcess process = new TProcess();
        elementConfigFactory.initializeObjectValue(definition);
        elementConfigFactory.initializeObjectValue(process);
        
        process.setName(modelerFile.getName());
        process.setId(NBModelerUtil.getAutoGeneratedStringId());
        definition.addRootElement(process);
        
        
        BPMNDiagram diagram = new BPMNDiagram();
//        diagram.setId(BPMNUtil.getAutoGeneratedStringId());
        BPMNPlane plane = new BPMNPlane();
        plane.setId(NBModelerUtil.getAutoGeneratedStringId()+"_p");
        diagram.setBPMNPlane(plane);
        plane.setBpmnElement(process.getId());
        definition.addBPMNDiagram(diagram);
        
        this.setDiagramElement(diagram);
        this.setDefinitionElement(definition);
        this.setRootElement(process);
        
        
        this.getModelerScene().setRootElementSpec(process);
    }
}
